@model AspnetCoreMvcFull.DTO.Product
@using AspnetCoreMvcFull.Extensions
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Product Details";
    var userId = Context.Session.GetString("UserId") ?? "";
    var isAdmin = Context.Session.GetString("IsAdmin") == "1";
    var isAffiliate = Context.Session.GetString("IsAffiliate") == "1";
    var isCustomer = Context.Session.GetString("IsCustomer") == "1";

    var userDataObj = new
    {
        userId = userId,
        isAdmin = isAdmin,
        isAffiliate = isAffiliate,
        isCustomer = isCustomer
    };

    var userDataJson = JsonConvert.SerializeObject(userDataObj);
}

<script id="user-data" type="application/json">
    @Html.Raw(userDataJson)
</script>

<script src="~/js/shop-common.js" defer></script>
<script src="~/js/shop.js" defer></script>

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light"> Shop </span> Product Details
    </h4>

    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row">
                        <!-- Product Image -->
                        <div class="col-lg-5 col-md-6 mb-4 mb-md-0">
                            <div class="card">
                                <div class="card-body text-center p-5">
                                    <img src="@(string.IsNullOrEmpty(Model.ImageUrl()) ? "/img/products/default.jpg" : Model.ImageUrl())"
                                         class="img-fluid" alt="@Model.Name" style="max-height: 400px;">
                                </div>
                            </div>
                        </div>

                        <!-- Product Details -->
                        <div class="col-lg-7 col-md-6">
                            <h3 class="mb-2">@Model.Name</h3>

                            <!-- Price -->
                            <div class="d-flex align-items-center mb-3">
                                @if (Model.HasDiscount())
                                {
                                    <h4 class="text-danger mb-0 me-2">$@Model.DiscountPrice().ToString("F2")</h4>
                                    <h5 class="text-muted mb-0 me-2"><del>$@Model.Price.ToString("F2")</del></h5>
                                    <span class="badge bg-danger">-@Model.DiscountPercentage()%</span>
                                }
                                else
                                {
                                    <h4 class="mb-0">$@Model.Price.ToString("F2")</h4>
                                }
                            </div>

                            <!-- Availability -->
                            <div class="mb-4">
                                @if (Model.StockQuantity() > 10)
                                {
                                    <span class="badge bg-label-success me-1">In Stock</span>
                                }
                                else if (Model.StockQuantity() > 0)
                                {
                                    <span class="badge bg-label-warning me-1">Low Stock: @Model.StockQuantity() left</span>
                                }
                                else
                                {
                                    <span class="badge bg-label-danger me-1">Out of Stock</span>
                                }
                            </div>

                            <!-- Description -->
                            <div class="mb-4">
                                <h5>Description</h5>
                                <p>@Model.Description</p>
                            </div>

                            <!-- Categories & Tags -->
                            <div class="mb-4">
                                @if (Model.Categories().Any())
                                {
                                    <div class="mb-2">
                                        <h5 class="mb-2">Categories</h5>
                                        @foreach (var category in Model.Categories())
                                        {
                                            <a href="@Url.Action("Index", new { category = category })"
                                               class="badge bg-primary me-1">@category</a>
                                        }
                                    </div>
                                }

                                @if (Model.Tags().Any())
                                {
                                    <div>
                                        <h5 class="mb-2">Tags</h5>
                                        @foreach (var tag in Model.Tags())
                                        {
                                            <a href="@Url.Action("Index", new { tag = tag })"
                                               class="badge bg-secondary me-1">@tag</a>
                                        }
                                    </div>
                                }
                            </div>

                            <!-- Quantity Selection & Add to Cart -->
                            <div class="mt-4">
                                <div class="input-group mb-3" style="width: 200px;">
                                    <input type="number" class="form-control quantity-input" value="1" min="1" max="@Model.StockQuantity()">
                                </div>
                                <button class="btn btn-primary" id="add-to-cart-btn"
                                        data-product-id="@Model.ProductId"
                                @(Model.StockQuantity() <= 0 || string.IsNullOrEmpty(userId) ? "disabled" : "")>
                                    <i class="ti ti-shopping-cart me-1"></i> Add to Cart
                                </button>
                            </div>

                            <!-- Back to shop button -->
                            <div class="mt-3">
                                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                    <i class="ti ti-arrow-left me-1"></i> Back to Shop
                                </a>
                                <a href="@Url.Action("Cart")" class="btn btn-outline-primary ms-2">
                                    <i class="ti ti-shopping-cart me-1"></i> View Cart (<span class="cart-count">0</span>)
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Related Products -->
    @if (ViewBag.RelatedProducts != null && ((List<AspnetCoreMvcFull.DTO.Product>)ViewBag.RelatedProducts).Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Related Products</h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-4">
                            @foreach (var relatedProduct in (List<AspnetCoreMvcFull.DTO.Product>)ViewBag.RelatedProducts)
                            {
                                <div class="col-lg-3 col-md-6 col-sm-6">
                                    <div class="card product-card h-100">
                                        @if (relatedProduct.HasDiscount())
                                        {
                                            <div class="badge bg-danger discount-badge">
                                                -@relatedProduct.DiscountPercentage()%
                                            </div>
                                        }
                                        <div class="card-img-top text-center pt-4">
                                            <img src="@(string.IsNullOrEmpty(relatedProduct.ImageUrl()) ? "/img/products/default.jpg" : relatedProduct.ImageUrl())"
                                                 class="product-image" alt="@relatedProduct.Name"
                                                 style="height: 150px; object-fit: contain;">
                                        </div>
                                        <div class="card-body">
                                            <h5 class="card-title">@relatedProduct.Name</h5>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div>
                                                    @if (relatedProduct.HasDiscount())
                                                    {
                                                        <span class="text-muted text-decoration-line-through me-1">
                                                            $@relatedProduct.Price.ToString("F2")
                                                        </span>
                                                        <span class="fw-bold text-danger">
                                                            $@relatedProduct.DiscountPrice().ToString("F2")
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="fw-bold">$@relatedProduct.Price.ToString("F2")</span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="card-footer">
                                            <div class="d-flex justify-content-between">
                                                <a href="@Url.Action("ProductDetails", new { id = relatedProduct.ProductId })"
                                                   class="btn btn-outline-primary me-2">View Details</a>
                                                <button class="btn btn-primary related-add-to-cart"
                                                        data-product-id="@relatedProduct.ProductId"
                                                @(relatedProduct.StockQuantity() <= 0 || string.IsNullOrEmpty(userId) ? "disabled" : "")>
                                                    <i class="ti ti-shopping-cart"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add to cart button for main product
        const addToCartBtn = document.getElementById('add-to-cart-btn');
        if (addToCartBtn) {
            addToCartBtn.addEventListener('click', function() {
                const productId = this.getAttribute('data-product-id');
                const quantity = parseInt(document.querySelector('.quantity-input').value) || 1;

                // Use the global addToCart function from shop-common.js
                addToCart(productId, quantity);
            });
        }

        // Add to cart buttons for related products
        document.querySelectorAll('.related-add-to-cart').forEach(button => {
            button.addEventListener('click', function() {
                const productId = this.getAttribute('data-product-id');

                // Add 1 item for related products
                addToCart(productId, 1);
            });
        });
    });
</script>

@* @model AspnetCoreMvcFull.DTO.Product
@using AspnetCoreMvcFull.Extensions
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Product Details";
    var userId = Context.Session.GetString("UserId") ?? "";
    var isAdmin = Context.Session.GetString("IsAdmin") == "1";
    var isAffiliate = Context.Session.GetString("IsAffiliate") == "1";
    var isCustomer = Context.Session.GetString("IsCustomer") == "1";

    var userDataObj = new
    {
        userId = userId,
        isAdmin = isAdmin,
        isAffiliate = isAffiliate,
        isCustomer = isCustomer
    };

    var userDataJson = JsonConvert.SerializeObject(userDataObj);
}

<script id="user-data" type="application/json">
    @Html.Raw(userDataJson)
</script>

<script src="~/js/shop-common.js" defer></script>
<script src="~/js/shop.js" defer></script>

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light"> Shop </span> Product Details
    </h4>

    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row">
                        <!-- Product Image -->
                        <div class="col-lg-5 col-md-6 mb-4 mb-md-0">
                            <div class="card">
                                <div class="card-body text-center p-5">
                                    <img src="@(string.IsNullOrEmpty(Model.ImageUrl()) ? "/img/products/default.jpg" : Model.ImageUrl())"
                                         class="img-fluid" alt="@Model.Name" style="max-height: 400px;">
                                </div>
                            </div>
                        </div>

                        <!-- Product Details -->
                        <div class="col-lg-7 col-md-6">
                            <h3 class="mb-2">@Model.Name</h3>

                            <!-- Price -->
                            <div class="d-flex align-items-center mb-3">
                                @if (Model.HasDiscount())
                                {
                                    <h4 class="text-danger mb-0 me-2">$@Model.DiscountPrice().ToString("F2")</h4>
                                    <h5 class="text-muted mb-0 me-2"><del>$@Model.Price.ToString("F2")</del></h5>
                                    <span class="badge bg-danger">-@Model.DiscountPercentage()%</span>
                                }
                                else
                                {
                                    <h4 class="mb-0">$@Model.Price.ToString("F2")</h4>
                                }
                            </div>

                            <!-- Availability -->
                            <div class="mb-4">
                                @if (Model.StockQuantity() > 10)
                                {
                                    <span class="badge bg-label-success me-1">In Stock</span>
                                }
                                else if (Model.StockQuantity() > 0)
                                {
                                    <span class="badge bg-label-warning me-1">Low Stock: @Model.StockQuantity() left</span>
                                }
                                else
                                {
                                    <span class="badge bg-label-danger me-1">Out of Stock</span>
                                }
                            </div>

                            <!-- Description -->
                            <div class="mb-4">
                                <h5>Description</h5>
                                <p>@Model.Description</p>
                            </div>

                            <!-- Categories & Tags -->
                            <div class="mb-4">
                                @if (Model.Categories().Any())
                                {
                                    <div class="mb-2">
                                        <h5 class="mb-2">Categories</h5>
                                        @foreach (var category in Model.Categories())
                                        {
                                            <a href="@Url.Action("Index", new { category = category })"
                                               class="badge bg-primary me-1">@category</a>
                                        }
                                    </div>
                                }

                                @if (Model.Tags().Any())
                                {
                                    <div>
                                        <h5 class="mb-2">Tags</h5>
                                        @foreach (var tag in Model.Tags())
                                        {
                                            <a href="@Url.Action("Index", new { tag = tag })"
                                               class="badge bg-secondary me-1">@tag</a>
                                        }
                                    </div>
                                }
                            </div>

                            <!-- Quantity Selection & Add to Cart -->
                            <div class="mt-4">
                                <div class="input-group mb-3" style="width: 200px;">
                                    <input type="number" class="form-control quantity-input" value="1" min="1" max="@Model.StockQuantity()">
                                </div>
                                <button class="btn btn-primary" id="add-to-cart-btn"
                                        data-product-id="@Model.ProductId"
                                @(Model.StockQuantity() <= 0 || string.IsNullOrEmpty(userId) ? "disabled" : "")>
                                    <i class="ti ti-shopping-cart me-1"></i> Add to Cart
                                </button>
                            </div>

                            <!-- Back to shop button -->
                            <div class="mt-3">
                                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                    <i class="ti ti-arrow-left me-1"></i> Back to Shop
                                </a>
                                <a href="@Url.Action("Cart")" class="btn btn-outline-primary ms-2">
                                    <i class="ti ti-shopping-cart me-1"></i> View Cart (<span class="cart-count">0</span>)
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Related Products -->
    @if (ViewBag.RelatedProducts != null && ((List<AspnetCoreMvcFull.DTO.Product>)ViewBag.RelatedProducts).Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Related Products</h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-4">
                            @foreach (var relatedProduct in (List<AspnetCoreMvcFull.DTO.Product>)ViewBag.RelatedProducts)
                            {
                                <div class="col-lg-3 col-md-6 col-sm-6">
                                    <div class="card product-card h-100">
                                        @if (relatedProduct.HasDiscount())
                                        {
                                            <div class="badge bg-danger discount-badge">
                                                -@relatedProduct.DiscountPercentage()%
                                            </div>
                                        }
                                        <div class="card-img-top text-center pt-4">
                                            <img src="@(string.IsNullOrEmpty(relatedProduct.ImageUrl()) ? "/img/products/default.jpg" : relatedProduct.ImageUrl())"
                                                 class="product-image" alt="@relatedProduct.Name"
                                                 style="height: 150px; object-fit: contain;">
                                        </div>
                                        <div class="card-body">
                                            <h5 class="card-title">@relatedProduct.Name</h5>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div>
                                                    @if (relatedProduct.HasDiscount())
                                                    {
                                                        <span class="text-muted text-decoration-line-through me-1">
                                                            $@relatedProduct.Price.ToString("F2")
                                                        </span>
                                                        <span class="fw-bold text-danger">
                                                            $@relatedProduct.DiscountPrice().ToString("F2")
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="fw-bold">$@relatedProduct.Price.ToString("F2")</span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="card-footer">
                                            <div class="d-flex justify-content-between">
                                                <a href="@Url.Action("ProductDetails", new { id = relatedProduct.ProductId })"
                                                   class="btn btn-outline-primary me-2">View Details</a>
                                                <button class="btn btn-primary related-add-to-cart"
                                                        data-product-id="@relatedProduct.ProductId"
                                                @(relatedProduct.StockQuantity() <= 0 || string.IsNullOrEmpty(userId) ? "disabled" : "")>
                                                    <i class="ti ti-shopping-cart"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add to cart button for main product
        const addToCartBtn = document.getElementById('add-to-cart-btn');
        if (addToCartBtn) {
            addToCartBtn.addEventListener('click', function() {
                const productId = this.getAttribute('data-product-id');
                const quantity = parseInt(document.querySelector('.quantity-input').value) || 1;

                // Use the global addToCart function from shop-common.js
                window.addToCart(productId, quantity);
            });
        }

        // Add to cart buttons for related products
        document.querySelectorAll('.related-add-to-cart').forEach(button => {
            button.addEventListener('click', function() {
                const productId = this.getAttribute('data-product-id');

                // Add 1 item for related products
                window.addToCart(productId, 1);
            });
        });

        // Update cart count on page load
        if (typeof window.updateCartCount === 'function') {
            window.updateCartCount();
        }
    });
</script>
 *@
