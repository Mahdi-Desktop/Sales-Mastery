@{
  ViewData["Title"] = "Order List - eCommerce";
}

@section VendorStyles {
<link rel="stylesheet" href="~/vendor/libs/datatables-bs5/datatables.bootstrap5.css" />
<link rel="stylesheet" href="~/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css" />
<link rel="stylesheet" href="~/vendor/libs/datatables-buttons-bs5/buttons.bootstrap5.css" />
}

@section VendorScripts {
<script src="~/vendor/libs/datatables-bs5/datatables-bootstrap5.js"></script>
}



@* ************** Content ************** *@
<!-- Order List Widget -->

<div class="card mb-6">
    <div class="card-widget-separator-wrapper">
        <div class="card-body card-widget-separator">
            <div class="row gy-4 gy-sm-1">
                <div class="col-sm-6 col-lg-3">
                    <div class="d-flex justify-content-between align-items-start card-widget-1 border-end pb-4 pb-sm-0">
                        <div>
                            <h4 class="mb-0" id="pending-payment-count">--</h4>
                            <p class="mb-0">Pending Payment</p>
                        </div>
                        <span class="avatar me-sm-6">
                            <span class="avatar-initial bg-label-secondary rounded text-heading">
                                <i class="ti-26px ti ti-calendar-stats text-heading"></i>
                            </span>
                        </span>
                    </div>
                    <hr class="d-none d-sm-block d-lg-none me-6">
                </div>
                <div class="col-sm-6 col-lg-3">
                    <div class="d-flex justify-content-between align-items-start card-widget-2 border-end pb-4 pb-sm-0">
                        <div>
                            <h4 class="mb-0" id="completed-count">--</h4>
                            <p class="mb-0">Completed</p>
                        </div>
                        <span class="avatar p-2 me-lg-6">
                            <span class="avatar-initial bg-label-secondary rounded"><i class="ti-26px ti ti-checks text-heading"></i></span>
                        </span>
                    </div>
                    <hr class="d-none d-sm-block d-lg-none">
                </div>
                <div class="col-sm-6 col-lg-3">
                    <div class="d-flex justify-content-between align-items-start border-end pb-4 pb-sm-0 card-widget-3">
                        <div>
                            <h4 class="mb-0" id="refunded-count">--</h4>
                            <p class="mb-0">Refunded</p>
                        </div>
                        <span class="avatar p-2 me-sm-6">
                            <span class="avatar-initial bg-label-secondary rounded"><i class="ti-26px ti ti-wallet text-heading"></i></span>
                        </span>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h4 class="mb-0" id="failed-count">--</h4>
                            <p class="mb-0">Failed</p>
                        </div>
                        <span class="avatar p-2">
                            <span class="avatar-initial bg-label-secondary rounded"><i class="ti-26px ti ti-alert-octagon text-heading"></i></span>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Order List Table -->
<div class="card">
    <div class="card-datatable table-responsive">
        <table class="datatables-order table border-top">
            <thead>
                <tr>
                    <th></th>
                    <th></th>
                    <th>Order</th>
                    <th>Date</th>
                    <th>Customer</th>
                    <th>Payment</th>
                    <th>Status</th>
                    <th>Method</th>
                    <th>Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>



<script>
    (function () {
      'use strict';

      // DataTable initialization
      let dt_order_table = $('.datatables-order');

      // DataTable with buttons
      if (dt_order_table.length) {
        var dt_order = dt_order_table.DataTable({
          processing: true,
          serverSide: true,
          ajax: {
            url: '/Order/GetOrdersData',
            type: 'GET',
            dataSrc: function(json) {
              // Update statistics with live data
              $('#pending-payment-count').text(json.statistics.pendingPayment);
              $('#completed-count').text(json.statistics.completed);
              $('#refunded-count').text(json.statistics.refunded);
              $('#failed-count').text(json.statistics.failed);

              return json.data;
            }
          },
          columns: [
            { data: '', defaultContent: '' }, // Responsive control column
            { data: '' }, // Checkbox column
            { data: 'order_id' },
            { data: 'date' },
            { data: 'customer' },
            { data: 'payment' },
            { data: 'status' },
            { data: 'method' },
            { data: '' } // Actions column
          ],
          columnDefs: [
            {
              className: 'control',
              orderable: false,
              searchable: false,
              responsivePriority: 2,
              targets: 0,
              render: function () {
                return '';
              }
            },
            {
              // For Checkboxes
              targets: 1,
              orderable: false,
              searchable: false,
              responsivePriority: 3,
              checkboxes: true,
              render: function () {
                return '<input type="checkbox" class="dt-checkboxes form-check-input">';
              },
              checkboxes: {
                selectAllRender: '<input type="checkbox" class="form-check-input">'
              }
            },
            {
              targets: 2,
              render: function (data, type, full) {
                return '<a href="/Order/Details/' + full.id + '">#' + data + '</a>';
              }
            },
            {
              // Status
              targets: 6,
              render: function (data, type, full) {
                var statusClasses = {
                  Pending: 'bg-label-warning',
                  Processing: 'bg-label-info',
                  Completed: 'bg-label-success',
                  Delivered: 'bg-label-success',
                  Failed: 'bg-label-danger',
                  Cancelled: 'bg-label-danger',
                  Refunded: 'bg-label-primary'
                };

                return '<span class="badge ' + (statusClasses[data] || 'bg-label-secondary') + '">' + data + '</span>';
              }
            },
            {
              // Payment
              targets: 5,
              render: function (data, type, full) {
                var paymentClasses = {
                  Paid: 'bg-label-success',
                  Unpaid: 'bg-label-warning',
                  Refunded: 'bg-label-primary'
                };

                return '<span class="badge ' + (paymentClasses[data] || 'bg-label-secondary') + '">' + data + '</span>';
              }
            },
            {
              // Actions
              targets: -1,
              title: 'Actions',
              searchable: false,
              orderable: false,
              render: function (data, type, full) {
                return (
                  '<div class="d-flex align-items-center">' +
                  '<a href="/Order/Details/' + full.id + '" class="btn btn-sm btn-icon"><i class="ti ti-eye"></i></a>' +
                  '<a href="javascript:;" class="dropdown-toggle btn btn-sm btn-icon hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical"></i></a>' +
                  '<div class="dropdown-menu dropdown-menu-end">' +
                  '<a href="/Order/Details/' + full.id + '" class="dropdown-item">View</a>' +
                  '<a href="javascript:;" class="dropdown-item delete-record" data-id="' + full.id + '">Delete</a>' +
                  '</div>' +
                  '</div>'
                );
              }
            }
          ],
          order: [[2, 'desc']],
          dom: '<"card-header d-flex flex-column flex-md-row"<"head-label text-center"><"dt-action-buttons text-end pt-3 pt-md-0"B>><"d-flex justify-content-between align-items-center row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>t<"d-flex justify-content-between row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
          displayLength: 10,
          lengthMenu: [10, 25, 50, 100],
          buttons: [
            {
              extend: 'collection',
              className: 'btn btn-label-primary dropdown-toggle me-2',
              text: '<i class="ti ti-file-export me-sm-1"></i> <span class="d-none d-sm-inline-block">Export</span>',
              buttons: [
                {
                  extend: 'print',
                  text: '<i class="ti ti-printer me-1"></i>Print',
                  className: 'dropdown-item'
                },
                {
                  extend: 'csv',
                  text: '<i class="ti ti-file-text me-1"></i>Csv',
                  className: 'dropdown-item'
                },
                {
                  extend: 'excel',
                  text: '<i class="ti ti-file-spreadsheet me-1"></i>Excel',
                  className: 'dropdown-item'
                },
                {
                  extend: 'pdf',
                  text: '<i class="ti ti-file-description me-1"></i>Pdf',
                  className: 'dropdown-item'
                },
                {
                  extend: 'copy',
                  text: '<i class="ti ti-copy me-1"></i>Copy',
                  className: 'dropdown-item'
                }
              ]
            },
            {
              text: '<i class="ti ti-plus me-sm-1"></i> <span class="d-none d-sm-inline-block">Add New Order</span>',
              className: 'btn btn-primary',
              action: function () {
                window.location.href = '/Order/Create';
              }
            }
          ],
          responsive: {
            details: {
              display: $.fn.dataTable.Responsive.display.modal({
                header: function (row) {
                  var data = row.data();
                  return 'Details of ' + data['order_id'];
                }
              }),
              type: 'column',
              renderer: function (api, rowIdx, columns) {
                var data = $.map(columns, function (col, i) {
                  return col.title !== '' // ? Do not show row in modal popup if title is blank (for checkboxes)
                    ? '<tr data-dt-row="' +
                        col.rowIndex +
                        '" data-dt-column="' +
                        col.columnIndex +
                        '">' +
                        '<td>' +
                        col.title +
                        ':' +
                        '</td> ' +
                        '<td>' +
                        col.data +
                        '</td>' +
                        '</tr>'
                    : '';
                }).join('');

                return data ? $('<table class="table"/><tbody />').append(data) : false;
              }
            }
          }
        });

        // Adding heading
        $('.head-label').html('<h5 class="card-title mb-0">Order List</h5>');
      }

      // Delete Record
      $(document).on('click', '.delete-record', function () {
        var orderId = $(this).data('id');

        // Show confirmation dialog
        Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
                  confirmButtonText: 'Yes, delete it!',
                  customClass: {
                    confirmButton: 'btn btn-primary me-3',
                    cancelButton: 'btn btn-label-secondary'
                  },
                  buttonsStyling: false
                }).then(function (result) {
                  if (result.isConfirmed) {
                    // Call the delete endpoint
                    $.ajax({
                      url: '/Order/Delete',
                      type: 'POST',
                      data: { id: orderId },
                      success: function (response) {
                        if (response.success) {
                          // Refresh table
                          dt_order.ajax.reload();

                          // Show success message
                          Swal.fire({
                            icon: 'success',
                            title: 'Deleted!',
                            text: 'Order has been deleted.',
                            customClass: {
                              confirmButton: 'btn btn-success'
                            }
                          });
                        } else {
                          // Show error message
                          Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: response.message || 'Could not delete order.',
                            customClass: {
                              confirmButton: 'btn btn-primary'
                            }
                          });
                        }
                      },
                      error: function () {
                        Swal.fire({
                          icon: 'error',
                          title: 'Error!',
                          text: 'An error occurred while deleting the order.',
                          customClass: {
                            confirmButton: 'btn btn-primary'
                          }
                        });
                      }
                    });
                  }
                });
              });
            });
</script>
