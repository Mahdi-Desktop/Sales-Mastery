@{
    ViewData["Title"] = "Product List - eCommerce";
}

@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/libs/datatables-bs5/datatables.bootstrap5.css" />
    <link rel="stylesheet" href="~/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css" />
    <link rel="stylesheet" href="~/vendor/libs/datatables-buttons-bs5/buttons.bootstrap5.css" />
    <link rel="stylesheet" href="~/vendor/libs/select2/select2.css">
}

@section VendorScripts {
    <script src="~/vendor/libs/datatables-bs5/datatables-bootstrap5.js"></script>
    <script src="~/vendor/libs/select2/select2.js"></script>
}

<div class="card mb-6">
    <div class="card-widget-separator-wrapper">
        <div class="card-body card-widget-separator">
            <div class="row gy-4 gy-sm-1">
                <div class="col-sm-6 col-lg-3">
                    <div class="d-flex justify-content-between align-items-start card-widget-1 border-end pb-4 pb-sm-0">
                        <div>
                            <p class="mb-1">Total Products</p>
                            <h4 class="mb-1" id="total-products">@ViewBag.TotalProducts</h4>
                        </div>
                        <span class="avatar me-sm-6">
                            <span class="avatar-initial rounded"><i class="ti-28px ti ti-box text-heading"></i></span>
                        </span>
                    </div>
                    <hr class="d-none d-sm-block d-lg-none me-6">
                </div>
                <div class="col-sm-6 col-lg-3">
                    <div class="d-flex justify-content-between align-items-start card-widget-2 border-end pb-4 pb-sm-0">
                        <div>
                            <p class="mb-1">In Stock</p>
                            <h4 class="mb-1" id="in-stock-products">@ViewBag.InStockProducts</h4>
                        </div>
                        <span class="avatar p-2 me-lg-6">
                            <span class="avatar-initial rounded"><i class="ti-28px ti ti-check text-heading"></i></span>
                        </span>
                    </div>
                    <hr class="d-none d-sm-block d-lg-none">
                </div>
                <div class="col-sm-6 col-lg-3">
                    <div class="d-flex justify-content-between align-items-start border-end pb-4 pb-sm-0 card-widget-3">
                        <div>
                            <p class="mb-1">Out of Stock</p>
                            <h4 class="mb-1" id="out-of-stock-products">@ViewBag.OutOfStockProducts</h4>
                        </div>
                        <span class="avatar p-2 me-sm-6">
                            <span class="avatar-initial rounded"><i class="ti-28px ti ti-alert-triangle text-heading"></i></span>
                        </span>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-3">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <p class="mb-1">Total Value</p>
                            <h4 class="mb-1" id="total-value">$@ViewBag.TotalValue.ToString("N2")</h4>
                        </div>
                        <span class="avatar p-2">
                            <span class="avatar-initial rounded"><i class="ti-28px ti ti-currency-dollar text-heading"></i></span>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Product List Table -->
<div class="card">
    <div class="card-header">
        <h5 class="card-title">Filter</h5>
        <div class="d-flex justify-content-between align-items-center row pt-4 gap-6 gap-md-0">
            <div class="col-md-4 product_category"></div>
            <div class="col-md-4 product_stock"></div>
        </div>
    </div>
    <div class="card-datatable table-responsive">
        <table class="datatables-products table">
            <thead class="border-top">
                <tr>
                    <th></th>
                    <th></th>
                    <th>Product</th>
                    <th>SKU</th>
                    <th>Price</th>
                    <th>Discount</th>
                    <th>Stock</th>
                    <th>Commission</th>
                    <th>Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            'use strict';

            // DataTable initialization
            let dt_product_table = $('.datatables-products');

            if (dt_product_table.length) {
                var dt_products = dt_product_table.DataTable({
                    ajax: {
                        url: '/Ecommerce/GetProductsJson',
                        dataSrc: function(json) {
                            console.log('Raw API response:', json);

                            // Check if we have data
                            if (!json || json.length === 0) {
                                console.warn('No products returned from API');
                            }

                            // Transform data if needed
                            return json.map(item => {
                                console.log('Processing item:', item);
                                return {
                                    ...item,
                                    stock: parseInt(item.stock) || 0 // Ensure stock is a number
                                };
                            });
                        },
                        error: function(xhr, error, thrown) {
                            console.error('DataTables error:', error, thrown);
                            console.error('Response:', xhr.responseText);
                        }
                    },
                    columns: [
                        { data: '' }, // Responsive control column
                        { data: 'image' }, // Product image
                        { data: 'name' }, // Product name
                        { data: 'sku' }, // SKU
                        { data: 'price' }, // Price
                        { data: 'discount' }, // Discount
                        { data: 'stock' }, // Stock
                        { data: 'commission' }, // Commission
                        { data: '' } // Actions
                    ],
                    columnDefs: [
                        {
                            // For Responsive
                            className: 'control',
                            orderable: false,
                            searchable: false,
                            responsivePriority: 2,
                            targets: 0,
                            render: function () {
                                return '';
                            }
                        },
                        {
                            // Product image
                            targets: 1,
                            orderable: false,
                            searchable: false,
                            render: function (data, type, full) {
                                console.log("Image data:", data); // Debug log

                                // Check if we have valid image data
                                if (data && data.length > 0 && data[0]) {
                                    // Use the first image from Firebase Storage
                                    return `<img src="${data[0]}" alt="${full.name}" class="rounded-2" height="40" width="40" onerror="this.onerror=null; this.src='/assets/img/elements/1.jpg';">`;
                                }

                                // Use a default image that definitely exists in the template
                                return '<img src="/assets/img/elements/1.jpg" alt="Product" class="rounded-2" height="40" width="40">';
                            }
                        },
                            {
        // Price
        targets: 4,
        render: function (data) {
            return '$' + parseFloat(data).toFixed(2);
        }
    },
    {
        // Discount
        targets: 5,
        render: function (data) {
            return (data || 0) + '%';
        }
    },
    {
        // Stock
        targets: 6,
        render: function (data) {
            const stockValue = parseInt(data) || 0;
            const stockClass = stockValue <= 0 ? 'bg-label-danger' : (stockValue <= 10 ? 'bg-label-warning' : 'bg-label-success');
            return '<span class="badge ' + stockClass + '">' + stockValue + '</span>';
        }
    },
    {
        // Commission
        targets: 7,
        render: function (data) {
            return '$' + parseFloat(data || 0).toFixed(2);
        }
    },
                        {
                            // Actions
                            targets: -1,
                            title: 'Actions',
                            orderable: false,
                            searchable: false,
                            render: function (data, type, full) {
                                return (
                                    '<div class="d-inline-block">' +
                                    '<a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical"></i></a>' +
                                    '<div class="dropdown-menu dropdown-menu-end">' +
                                    '<a href="javascript:;" class="dropdown-item">View</a>' +
                                    '<a href="javascript:;" class="dropdown-item">Edit</a>' +
                                    '<a href="javascript:;" class="dropdown-item delete-record">Delete</a>' +
                                    '</div>' +
                                    '</div>'
                                );
                            }
                        }
                    ],
                    order: [[2, 'asc']], // Order by product name
                    dom: '<"card-header d-flex flex-wrap py-3"<"me-5"f><"dt-action-buttons text-end pt-3 pt-md-0"B>><"row"<"col-sm-12"t>><"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
                    buttons: [
                        {
                            text: '<i class="ti ti-plus me-0 me-sm-1"></i><span class="d-none d-sm-inline-block">Add Product</span>',
                            className: 'btn btn-primary',
                            action: function () {
                                window.location.href = '/Ecommerce/ProductAdd';
                            }
                        }
                    ],
                    initComplete: function () {
                        // Adding category filter
                        this.api()
                            .columns(2) // Changed from 4 to 2 since we removed category/brand columns
                            .every(function () {
                                var column = this;
                                var select = $('<select class="form-select"><option value="">All Products</option></select>')
                                    .appendTo('.product_category')
                                    .on('change', function () {
                                        var val = $.fn.dataTable.util.escapeRegex($(this).val());
                                        column.search(val ? '^' + val + '$' : '', true, false).draw();
                                    });

                                column
                                    .data()
                                    .unique()
                                    .sort()
                                    .each(function (d) {
                                        select.append('<option value="' + d + '">' + d + '</option>');
                                    });
                            });

                        // Adding stock status filter
                        this.api()
                            .columns(6) // Changed from 8 to 6 since we removed category/brand columns
                            .every(function () {
                                var column = this;
                                var select = $('<select class="form-select"><option value="">All Status</option></select>')
                                    .appendTo('.product_stock')
                                    .on('change', function () {
                                        var val = $(this).val();
                                        if (val === 'In Stock') {
                                            column.search('^[1-9]\\d*$', true, false).draw();
                                        } else if (val === 'Out of Stock') {
                                            column.search('^0$', true, false).draw();
                                        } else {
                                            column.search('').draw();
                                        }
                                    });

                                select.append('<option value="In Stock">In Stock</option>');
                                select.append('<option value="Out of Stock">Out of Stock</option>');
                            });
                    }
                });
            }

            // Delete Record
            $('.datatables-products tbody').on('click', '.delete-record', function () {
                var data = dt_products.row($(this).closest('tr')).data();

                if (confirm('Are you sure you want to delete this product?')) {
                    // Call your delete API here
                    fetch('/api/products/' + data.productId, {
                        method: 'DELETE'
                    })
                        .then(response => {
                            if (response.ok) {
                                dt_products.ajax.reload();
                            } else {
                                alert('Error deleting product');
                            }
                        });
                }
            });
        });
    </script>
