@* ! Brand demo (display only for navbar-full and hide on below xl) *@
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    var userId = HttpContextAccessor.HttpContext?.Session.GetString("UserId") ?? "";
}
@if (ViewData["navbarFull"] != null)
{
   <div class="navbar-brand app-brand demo d-none d-xl-flex py-0 me-4">
  <a asp-controller="Dashboards" asp-action="Index" class="app-brand-link">
      <span class="app-brand-logo demo">
      @await Html.PartialAsync("../_Partials/_Macros")
      </span>
      <span class="app-brand-text demo menu-text fw-bold">@TempData.Peek("appName")</span>
    </a>

    @* ! Display menu close icon only for horizontal-menu with navbar-full *@
     @if (Convert.ToBoolean(@TempData.Peek("menuHorizontal")).ToString() == "True")
    {
      <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto d-xl-none">
        <i class="ti ti-x ti-md align-middle"></i>
      </a>
    }
  </div>
}

@* ! Not required for layout-without-menu *@
@if (ViewData["navbarHideToggle"] == null)
{
  <div
  class='layout-menu-toggle navbar-nav align-items-xl-center me-3 me-xl-0  @((Convert.ToBoolean(@TempData.Peek("menuHorizontal")).ToString() == "True") ? "" : "d-xl-none") @((@ViewData["contentNavbar"] != null && Convert.ToBoolean(@ViewData["contentNavbar"])) ? "" : "d-xl-none")'>
  <a class="nav-item nav-link px-0 me-xl-4" href="javascript:void(0)">
    <i class="ti ti-menu-2 ti-md"></i>
  </a>
  </div>
}

<div class="navbar-nav-right d-flex align-items-center" id="navbar-collapse">

  <!-- Search -->
@*   @if (Convert.ToBoolean(TempData.Peek("menuHorizontal")).ToString() != "True")
  {
    <div class="navbar-nav align-items-center">
      <div class="nav-item navbar-search-wrapper mb-0">
        <a class="nav-item nav-link search-toggler d-flex align-items-center px-0" href="javascript:void(0);">
          <i class="ti ti-search ti-md me-2 me-lg-4 ti-lg"></i>
          <span class="d-none d-md-inline-block text-muted fw-normal">Search (Ctrl+/)</span>
        </a>
      </div>
    </div>
  }*@
  <!-- /Search -->

  <ul class="navbar-nav flex-row align-items-center ms-auto">
@*     <!-- Search -->
    @if (Convert.ToBoolean(TempData.Peek("menuHorizontal")).ToString() == "True")
    {
      <li class="nav-item navbar-search-wrapper">
        <a class="nav-link btn btn-text-secondary btn-icon rounded-pill search-toggler" href="javascript:void(0);">
          <i class="ti ti-search ti-md"></i>
        </a>
      </li>
    }
    <!-- /Search --> *@
@*     <!-- Language -->
    <li class="nav-item dropdown-language dropdown">
      <a class="nav-link btn btn-text-secondary btn-icon rounded-pill dropdown-toggle hide-arrow" href="javascript:void(0);" data-bs-toggle="dropdown">
        <i class='ti ti-language rounded-circle ti-md'></i>
      </a>
      <ul class="dropdown-menu dropdown-menu-end">
        <li>
          <a class="dropdown-item" href="javascript:void(0);" data-language="en" data-text-direction="ltr">
            <span>English</span>
          </a>
        </li>
        <li>
          <a class="dropdown-item" href="javascript:void(0);" data-language="fr" data-text-direction="ltr">
            <span>French</span>
          </a>
        </li>
        <li>
          <a class="dropdown-item" href="javascript:void(0);" data-language="ar" data-text-direction="rtl">
            <span>Arabic</span>
          </a>
        </li>
        <li>
          <a class="dropdown-item" href="javascript:void(0);" data-language="de" data-text-direction="ltr">
            <span>German</span>
          </a>
        </li>
      </ul>
    </li>
    <!--/ Language --> *@
    <!-- Style Switcher -->
    <li class="nav-item dropdown-style-switcher dropdown">
      <a class="nav-link btn btn-text-secondary btn-icon rounded-pill dropdown-toggle hide-arrow" href="javascript:void(0);" data-bs-toggle="dropdown">
        <i class='ti ti-md'></i>
      </a>
      <ul class="dropdown-menu dropdown-menu-end dropdown-styles">
        <li>
          <a class="dropdown-item" href="javascript:void(0);" data-theme="light">
            <span class="align-middle"><i class='ti ti-sun ti-md me-3'></i>Light</span>
          </a>
        </li>
        <li>
          <a class="dropdown-item" href="javascript:void(0);" data-theme="dark">
            <span class="align-middle"><i class="ti ti-moon-stars ti-md me-3"></i>Dark</span>
          </a>
        </li>
        <li>
          <a class="dropdown-item" href="javascript:void(0);" data-theme="system">
            <span class="align-middle"><i class="ti ti-device-desktop-analytics ti-md me-3"></i>System</span>
          </a>
        </li>
      </ul>
    </li>
    <!-- / Style Switcher-->

    <!-- User -->
    <li class="nav-item navbar-dropdown dropdown-user dropdown">
      <a class="nav-link dropdown-toggle hide-arrow p-0" href="javascript:void(0);" data-bs-toggle="dropdown">
        <div class="avatar avatar-online">
          <!-- Replace image with icon -->
          <span class="avatar-initial rounded-circle bg-label-secondary">
            <i class="ti ti-user ti-sm"></i>
          </span>
        </div>
      </a>
      <ul class="dropdown-menu dropdown-menu-end">
      <li>
          <a class="dropdown-item mt-0" asp-controller="Pages" asp-action="AccountSettings">
              <div class="d-flex align-items-center">
                  <div class="flex-shrink-0 me-2">
                      <div class="avatar avatar-online">
                          <!-- Replace image with icon -->
                          <span class="avatar-initial rounded-circle bg-label-secondary">
                            <i class="ti ti-user ti-sm"></i>
                          </span>
                      </div>
                  </div>
                  <div class="flex-grow-1">
                      <h6 class="mb-0" id="navbar-user-name">Loading...</h6>
                      <small class="text-muted" id="navbar-user-role">Loading...</small>
                  </div>
              </div>
          </a>
      </li>
      <li>
          <div class="dropdown-divider my-1 mx-n2"></div>
      </li>

      <li>
          <div class="d-grid px-2 pt-2 pb-1">
              <a class="btn btn-sm btn-danger d-flex" asp-controller="Auth" asp-action="LoginBasic" target="_self">
                  <small class="align-middle">Logout</small>
                  <i class="ti ti-logout ms-2 ti-14px"></i>
              </a>
          </div>
      </li>
      </ul>
    </li>
    <!--/ User -->

  </ul>
</div>

<!-- Search Small Screens -->
<div
  class='navbar-search-wrapper search-input-wrapper @((Convert.ToBoolean(@TempData.Peek("menuHorizontal")).ToString() == "True") ? @ViewData["containerNav"] : "") d-none'>
  <input type="text"
    class='form-control search-input @((Convert.ToBoolean(@TempData.Peek("menuHorizontal")).ToString() == "True") ? "" : @ViewData["containerNav"]) border-0'
    placeholder="Search..." aria-label="Search...">
  <i class="ti ti-x search-toggler cursor-pointer"></i>
</div>

<!-- Add this script to fetch user data -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const userId = "@userId";
    if (userId) {
      fetchUserData(userId);
    }
  });

  async function fetchUserData(userId) {
    try {
      // Initialize Firebase if not already initialized
      if (typeof firebase === 'undefined' || !firebase.apps.length) {
        // If Firebase is not available yet, retry after a short delay
        setTimeout(() => fetchUserData(userId), 500);
        return;
      }

      const db = firebase.firestore();
      const userDoc = await db.collection('users').doc(userId).get();

      if (userDoc.exists) {
        const userData = userDoc.data();

        // Update user name
        const userName = `${userData.FirstName || ''} ${userData.LastName || ''}`.trim();
        document.getElementById('navbar-user-name').textContent = userName || 'User';

        // Update user role
        let roleText = 'User';
        switch(userData.Role) {
          case '1':
            roleText = 'Admin';
            break;
          case '2':
            roleText = 'Affiliate';
            break;
          case '3':
            roleText = 'Customer';
            break;
        }
        document.getElementById('navbar-user-role').textContent = roleText;

        // You could also update the avatar here if you have user profile images
      } else {
        console.log('No user found with ID:', userId);
        document.getElementById('navbar-user-name').textContent = 'Unknown User';
        document.getElementById('navbar-user-role').textContent = 'Unknown Role';
      }
    } catch (error) {
      console.error('Error fetching user data:', error);
      document.getElementById('navbar-user-name').textContent = 'Error Loading User';
      document.getElementById('navbar-user-role').textContent = 'Please refresh';
    }
  }
</script>
